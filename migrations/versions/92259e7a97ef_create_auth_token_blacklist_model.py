"""create auth_token_blacklist model

Revision ID: 92259e7a97ef
Revises: 85bf14be9d92
Create Date: 2022-09-14 07:27:55.049483

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy.engine.reflection import Inspector

# revision identifiers, used by Alembic.
revision = "92259e7a97ef"
down_revision = "864045026e2f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "auth_token_blacklist" not in tables:
        op.create_table(
            "auth_token_blacklist",
            sa.Column(
                "token_id",
                sa.String(length=128),
                server_default=sa.text("uuid_generate_v4()"),
                nullable=False,
            ),
            sa.Column(
                "jti",
                sa.String(length=36),
                index=True,
                nullable=False,
            ),
            sa.Column(
                "created_at",
                sa.DateTime(),
                server_default=sa.text("now()"),
                nullable=False,
            ),
            sa.Column(
                "revoked",
                sa.Boolean(),
                server_default='false',
                nullable=False,
            ),
            sa.Column("user_id", sa.String(length=128), nullable=True, index=True),
            sa.PrimaryKeyConstraint("token_id"),
            sa.ForeignKeyConstraint(
                ["user_id"],
                ["users.user_id"],
            ),
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()
    if "auth_token_blacklist" in tables:
        op.drop_table("auth_token_blacklist")
